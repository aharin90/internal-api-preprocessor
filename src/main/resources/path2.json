{
  "paths": {
    "/accounts/{accountId}": {
      "get": {
        "tags": [
          "/accounts"
        ],
        "description": "<p>The account is the root resource for many of the operations in the Bandwidth Dashboard API.</p> <p>The account is represented by an account id, which is the resource that represents a Bandwidth customer, providing a root resource for all of the customer's attributes and services.</p> <p>The API calls that are used to manage the details of a customer account, and to manage the resources that a Bandwidth customer has access to or control over, are accessed through the /accounts resource.</p> <p>This API call retrieves information about the account indicated by the Account ID.</p>",
        "operationId": "GetAccount",
        "summary": "Retrieve account",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "User's account ID",
            "example": "900000",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve Account information.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AccountResponse>\n  <Account>\n    <AccountId>14</AccountId>\n    <AssociatedCatapultAccount>u-ertyhgfd12dcvdhnboklk</AssociatedCatapultAccount>\n    <GlobalAccountNumber>globalAccount</GlobalAccountNumber>\n    <CompanyName>CWI Hosting</CompanyName>\n    <AccountType>Business</AccountType>\n    <NenaId/>\n    <CustomerSegment>Trial</CustomerSegment>\n    <Tiers>\n      <Tier>0</Tier>\n    </Tiers>\n    <Address>\n      <HouseNumber>904</HouseNumber>\n      <HouseSuffix>E</HouseSuffix>\n      <PreDirectional/>\n      <StreetName>Anson</StreetName>\n      <StreetSuffix>St</StreetSuffix>\n      <PostDirectional/>\n      <AddressLine2/>\n      <City>Marshalltown</City>\n      <StateCode>IA</StateCode>\n      <Zip>50158</Zip>\n      <PlusFour/>\n      <County/>\n      <Country>United States</Country>\n      <AddressType>Billing</AddressType>\n    </Address>\n    <Contact>\n      <FirstName>Sanjay</FirstName>\n      <LastName>Rao</LastName>\n      <Phone>9195441234</Phone>\n      <Email>srao@bandwidth.com</Email>\n    </Contact>\n    <AltSpid>X455</AltSpid>\n    <SPID>9999</SPID>\n    <PortCarrierType>WIRELINE</PortCarrierType>\n  </Account>\n</AccountResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountResponseWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/addresses": {
      "get": {
        "tags": [
          "/accounts"
        ],
        "description": "GET is used to retrieve all addresses.",
        "operationId": "GetAllAddresses",
        "summary": "Retrieve all addresses",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "User's account ID",
            "example": "900000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "e911locationid",
            "description": "Search criterion for address by its locationid. Cannot be combined with type. Always returns E911 addresses.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "47950147-9c58-407c-bcc4-e88743b20db5"
          },
          {
            "name": "type",
            "description": "Search criterion for addresses by their type.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "e911"
          },
          {
            "name": "page",
            "description": "An ID of the first element in a page.  This value will indicate the first value, not the page number, of the initial entry in the page being requested.<br> It can be an id of address. The initial page is tagged with the ID `1`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "example": "3"
          },
          {
            "name": "size",
            "description": "The number of items to include in a page.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 500
            },
            "example": 5000
          },
          {
            "name": "suggestions",
            "description": "The text to search simultaneously through e911locationIds.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - the addresses retrieval request will return a list of all addresses having specified type.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AddressesResponse>\n  <TotalCount>1</TotalCount>\n  <Links>\n    <first>Link=&lt;http://admin.localhost:8080/api/accounts/8000259/addresses?type=e911&amp;page=1&amp;size=500&gt;;rel=\"first\";</first>\n    <next>Link=&lt;http://localhost:8080/api/accounts/8000259/addresses?type=E911&amp;page=501&amp;size=500&gt;;rel=\"next\";</next>\n  </Links>\n  <Addresses>\n    <Address>\n      <HouseNumber>207</HouseNumber>\n      <HouseSuffix/>\n      <PreDirectional/>\n      <StreetName>Elmastar</StreetName>\n      <StreetSuffix>AlternateStar</StreetSuffix>\n      <PostDirectional/>\n      <AddressLine2/>\n      <City>Carpinteriaaly</City>\n      <StateCode>NY</StateCode>\n      <Zip>93019</Zip>\n      <PlusFour/>\n      <County/>\n      <Country>United States</Country>\n      <AddressType>E911</AddressType>\n      <EndpointCount>2</EndpointCount>\n      <ValidationStatus>VALID</ValidationStatus>\n    </Address>\n  </Addresses>\n</AddressesResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AddressesResponseWrapper"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - if the account specified does not exist or is locked or there are no addresses for specified search criteria it will result in a not found.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AddressesResponse>\n  <ResponseStatus>\n    <Description>The resource does not exist</Description>\n  </ResponseStatus>\n</AddressesResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AddressesResponseNotFound"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/aeuis": {
      "get": {
        "tags": [
          "/accounts"
        ],
        "description": "GET is used to retrieve all Alternate end user identifiers.",
        "operationId": "GetAllAeuis",
        "summary": "Retrieve all AEUIS",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "User's account ID",
            "example": "900000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "An ID of the first element in a page.  This value will indicate the first value, not the count, of the initial entry in the page being requested.<br> It can be an acid of alternate end user identifier. The initial page is tagged with the ID '1'.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "example": "3, customIdentifier"
          },
          {
            "name": "size",
            "description": "The number of items to include in a page.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 500
            },
            "example": 5000
          },
          {
            "name": "aeui",
            "description": "The Alternate end user identifier associated with callback using E911 order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "someAcid"
          },
          {
            "name": "callback",
            "description": "Callback telephone number associated with AEUI using E911 oder.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "8042105760"
          },
          {
            "name": "pidfloenabledonly",
            "description": "This parameter allows to retrieve PIDF-LO enabled only AEUIs.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "suggestions",
            "description": "The text to search simultaneously through callbacks, called names and AEUIs.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - the AEUIs retrieval request will return a list of all AEUIs.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AlternateEndUserIdentifiersResponse>\n  <TotalCount>2</TotalCount>\n  <AlternateEndUserIdentifiers>\n    <AlternateEndUserIdentifier>\n      <Identifier>DavidAcid</Identifier>\n      <CallbackNumber>8042105760</CallbackNumber>\n      <EmergencyNotificationGroup>\n        <Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n        <Description>Building 5, 5th Floor.</Description>\n      </EmergencyNotificationGroup>\n    </AlternateEndUserIdentifier>\n    <AlternateEndUserIdentifier>\n      <Identifier>JohnAcid</Identifier>\n      <CallbackNumber>8042105618</CallbackNumber>\n    </AlternateEndUserIdentifier>\n  </AlternateEndUserIdentifiers>\n</AlternateEndUserIdentifiersResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlternateEndUserIdentifiersResponseWrapper"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - if the account specified does not exist or is locked or there are no AEUIs for specified search criteria it will result in a \"NOT FOUND\" response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AlternateEndUserIdentifiersResponse>\n  <ResponseStatus>\n    <ErrorCode>12087</ErrorCode>\n    <Description>Alternate End User Identifiers were not found.</Description>\n  </ResponseStatus>\n</AlternateEndUserIdentifiersResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlternateEndUserIdentifiersResponseNotFound"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/aeuis/{acid}": {
      "get": {
        "tags": [
          "/accounts"
        ],
        "description": "GET is used to retrieve a detailed information of Alternate end user identifier by acid.",
        "operationId": "RetrieveAeui",
        "summary": "Retrieve AEUI",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "User's account ID",
            "example": "900000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "acid",
            "description": "Alternate caller identity ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - will return full information about AEUI for the specified acid.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AlternateEndUserIdentifierResponse>\n  <AlternateEndUserIdentifier>\n    <Identifier>DavidAcid</Identifier>\n    <CallbackNumber>8042105760</CallbackNumber>\n    <E911>\n      <CallerName>David</CallerName>\n      <Address>\n        <HouseNumber>900</HouseNumber>\n        <HouseSuffix/>\n        <PreDirectional/>\n        <StreetName>MAIN CAMPUS</StreetName>\n        <StreetSuffix>DR</StreetSuffix>\n        <AddressLine2/>\n        <City>RALEIGH</City>\n        <StateCode>NC</StateCode>\n        <Zip>27606</Zip>\n        <PlusFour>5214</PlusFour>\n        <Country>United States</Country>\n        <AddressType>Billing</AddressType>\n      </Address>\n      <EmergencyNotificationGroup>\n        <Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n        <Description>Building 5, 5th Floor.</Description>\n      </EmergencyNotificationGroup>\n    </E911>\n  </AlternateEndUserIdentifier>\n</AlternateEndUserIdentifierResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlternateEndUserIdentifierWrapper"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - if the account specified does not exist or is locked or there are no AEUI that corresponds to specified acid it will result in a \"NOT FOUND\" response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AlternateEndUserIdentifierResponse>\n  <ResponseStatus>\n    <Description>The resource does not exist</Description>\n  </ResponseStatus>\n</AlternateEndUserIdentifierResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlternateEndUserIdentifierResponseNotFound"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/applications": {
      "get": {
        "tags": [
          "/accounts"
        ],
        "description": "<p>List applications.</p> <p>Please visit <a href='/docs/account/applications'>Applications management</a></p>",
        "operationId": "ListApplications",
        "summary": "List applications",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "User's account ID",
            "example": "900000",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve list applications",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationProvisioningResponse>\n  <ApplicationList>\n    <Application>\n      <ApplicationId>2cfcb382-161c-46d4-8c67-87ca09a72c85</ApplicationId>\n      <ServiceType>Messaging-V2</ServiceType>\n      <AppName>app1</AppName>\n      <!--DEPRECATED-->\n      <MsgCallbackUrl>http://a.com</MsgCallbackUrl>\n      <InboundCallbackUrl>http://a.com</InboundCallbackUrl>\n    </Application>\n    <Application>\n      <ApplicationId>0cb0112b-5998-4c81-999a-0d3fb5e3f8e2</ApplicationId>\n      <ServiceType>Voice-V2</ServiceType>\n      <AppName>app2</AppName>\n      <CallInitiatedCallbackUrl>http://b.com</CallInitiatedCallbackUrl>\n      <CallbackCreds>\n        <UserId>15jPWZmXdm</UserId>\n        </CallbackCreds>\n      <CallInitiatedFallbackUrl>https://fallback.com</CallInitiatedFallbackUrl>\n      <CallInitiatedFallbackMethod>POST</CallInitiatedFallbackMethod>\n      <CallInitiatedFallbackCreds>\n        <UserId>login2</UserId>\n      </CallInitiatedFallbackCreds>\n      <CallbackTimeout>20</CallbackTimeout>\n    </Application>\n  </ApplicationList>\n</ApplicationProvisioningResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProvisioningResponseWrapper"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "/accounts"
        ],
        "description": "<p>Create an Application.</p><p>CallbackUrl and MsgCallbackUrl fields are deprecated instead of use InboundCallbackUrl or OutboundCallbackUrl.</p><p>For more details please visit <a href='/docs/account/applications'>Applications management</a></p>",
        "operationId": "CreateApplication",
        "summary": "Create application",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "User's account ID",
            "example": "900000",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "messaging": {
                  "summary": "Messaging application",
                  "value": "<?xml version=\"1.0\" encoding=\"ISO-8859-1\" standalone=\"yes\"?>\n<Application>\n  <ServiceType>Messaging</ServiceType>\n  <AppName>EBVICs</AppName>\n  <InboundCallbackUrl>https://example.com</InboundCallbackUrl>\n  <OutboundCallbackUrl>https://example2.com</OutboundCallbackUrl>\n  <InboundCallbackCreds>\n    <UserId>15jPWZmXdm</UserId>\n    <Password>xxv3jPsPR2</Password>\n  </InboundCallbackCreds>\n  <OutboundCallbackCreds>\n    <UserId>15jPWZmXdm</UserId>\n    <Password>xxv3jPsPR2</Password>\n  </OutboundCallbackCreds>\n  <RequestedCallbackTypes>\n    <CallbackType>message-delivered</CallbackType>\n    <CallbackType>message-failed</CallbackType>\n    <CallbackType>message-sending</CallbackType>\n  </RequestedCallbackTypes>\n</Application>\n"
                },
                "voice": {
                  "summary": "Voice application",
                  "value": "<?xml version=\"1.0\" encoding=\"SO-8859-1\" standalone=\"yes\"?>\n<Application>\n  <ServiceType>Voice</ServiceType>\n  <AppName>v1</AppName>\n  <CallInitiatedCallbackUrl>https://a.com</CallInitiatedCallbackUrl>\n  <CallInitiatedMethod>GET</CallInitiatedMethod>\n  <CallStatusCallbackUrl>https://b.com</CallStatusCallbackUrl>\n  <CallStatusMethod>GET</CallStatusMethod>\n  <CallbackCreds>\n    <UserId>login123</UserId>\n    <Password>password123</Password>\n  </CallbackCreds>\n  <CallInitiatedFallbackUrl>https://fallback.com</CallInitiatedFallbackUrl>\n  <CallInitiatedFallbackMethod>POST</CallInitiatedFallbackMethod>\n  <CallInitiatedFallbackCreds>\n    <UserId>login2</UserId>\n    <Password>Password3</Password>\n  </CallInitiatedFallbackCreds>\n  <CallbackTimeout>20</CallbackTimeout>\n</Application>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ApplicationPayload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "messaging": {
                    "summary": "Messaging application",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationProvisioningResponse>\n  <Application>\n    <ApplicationId>d4d1b41d-4c05-47d0-838a-34e4f14e4e3e</ApplicationId>\n      <ServiceType>Messaging-V2</ServiceType>\n      <AppName>EBVICs</AppName>\n      <!--DEPRECATED-->\n      <MsgCallbackUrl>https://example.com</MsgCallbackUrl>\n      <InboundCallbackUrl>https://example.com</InboundCallbackUrl>\n      <OutboundCallbackUrl>https://example2.com</OutboundCallbackUrl>\n      <!--DEPRECATED-->\n      <MsgCallbackCreds>\n        <!--DEPRECATED-->\n        <UserId>15jPWZmXdm</UserId>\n        <!--DEPRECATED-->\n        </MsgCallbackCreds>\n      <InboundCallbackCreds>\n        <UserId>15jPWZmXdm</UserId>\n      </InboundCallbackCreds>\n      <OutboundCallbackCreds>\n        <UserId>15jPWZmXdm</UserId>\n      </OutboundCallbackCreds>\n      <RequestedCallbackTypes>\n        <CallbackType>message-delivered</CallbackType>\n        <CallbackType>message-failed</CallbackType>\n        <CallbackType>message-sending</CallbackType>\n      </RequestedCallbackTypes>\n  </Application>\n</ApplicationProvisioningResponse>"
                  },
                  "voice": {
                    "summary": "Voice application",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationProvisioningResponse>\n  <Application>\n    <ApplicationId>d3e418e9-1833-49c1-b6c7-ca1700f79586</ApplicationId>\n      <ServiceType>Voice-V2</ServiceType>\n      <AppName>v1</AppName>\n      <CallInitiatedCallbackUrl>https://a.com</CallInitiatedCallbackUrl>\n      <CallInitiatedMethod>GET</CallInitiatedMethod>\n      <CallStatusCallbackUrl>https://b.com</CallStatusCallbackUrl>\n      <CallStatusMethod>GET</CallStatusMethod>\n      <CallbackCreds>\n        <UserId>login123</UserId>\n      </CallbackCreds>\n      <CallInitiatedFallbackUrl>https://fallback.com</CallInitiatedFallbackUrl>\n      <CallInitiatedFallbackMethod>POST</CallInitiatedFallbackMethod>\n      <CallInitiatedFallbackCreds>\n        <UserId>login2</UserId>\n      </CallInitiatedFallbackCreds>\n      <CallbackTimeout>20</CallbackTimeout>\n    </Application>\n  </ApplicationProvisioningResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProvisioningSingleResponseWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/applications/{applicationId}": {
      "get": {
        "tags": [
          "/accounts"
        ],
        "description": "<p>Retrieve an Application</p><p>Please visit <a href='/docs/account/applications'>Applications management</a></p>",
        "operationId": "GetApplication",
        "summary": "Retrieve application",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "User's account ID",
            "example": "900000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "description": "Application ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "messaging": {
                    "summary": "Messaging application",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationProvisioningResponse>\n  <Application>\n    <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId>\n    <ServiceType>Messaging</ServiceType>\n    <AppName>qMmmTT</AppName>\n    <!--DEPRECATED-->\n    <MsgCallbackUrl>https://example.com</MsgCallbackUrl>\n    <InboundCallbackUrl>https://example.com</InboundCallbackUrl>\n    <OutboundCallbackUrl>https://example2.com</OutboundCallbackUrl>\n    <!--DEPRECATED-->\n    <MsgCallbackCreds>\n      <!--DEPRECATED-->\n      <UserId>15jPWZmXdm</UserId>\n      <!--DEPRECATED-->\n    </MsgCallbackCreds>\n    <InboundCallbackCreds>\n      <UserId>15jPWZmXdm</UserId>\n    </InboundCallbackCreds>\n    <OutboundCallbackCreds>\n      <UserId>15jPWZmXdm</UserId>\n    </OutboundCallbackCreds>\n    <RequestedCallbackTypes>\n      <CallbackType>message-delivered</CallbackType>\n      <CallbackType>message-failed</CallbackType>\n      <CallbackType>message-sending</CallbackType>\n    </RequestedCallbackTypes>\n  </Application>\n</ApplicationProvisioningResponse>\n"
                  },
                  "voice": {
                    "summary": "Voice application",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationProvisioningResponse>\n  <Application>\n    <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId>\n    <ServiceType>Voice</ServiceType>\n    <AppName>qMmmTT</AppName>\n    <CallInitiatedCallbackUrl>http://example.com</CallInitiatedCallbackUrl>\n    <CallbackCreds>\n      <UserId>15jPWZmXdm</UserId>\n    </CallbackCreds>\n    <CallInitiatedFallbackUrl>https://fallback.com</CallInitiatedFallbackUrl>\n    <CallInitiatedFallbackMethod>POST</CallInitiatedFallbackMethod>\n    <CallInitiatedFallbackCreds>\n      <UserId>login2</UserId>\n    </CallInitiatedFallbackCreds>\n    <CallbackTimeout>20</CallbackTimeout>\n  </Application>\n</ApplicationProvisioningResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProvisioningSingleResponseWrapper"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "/accounts"
        ],
        "description": "<p>Update an Application.</p><p>Please visit <a href='/docs/account/applications'>Applications management</a></p>",
        "operationId": "UpdateApplication",
        "summary": "Update application",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "User's account ID",
            "example": "900000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "description": "Application ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "messaging": {
                  "summary": "Messaging application",
                  "value": "<?xml version=\"1.0\" encoding=\"ISO-8859-1\" standalone=\"yes\"?>\n<Application>\n  <ServiceType>Messaging</ServiceType>\n  <AppName>EBVICs</AppName>\n  <InboundCallbackUrl>http://example.com</InboundCallbackUrl>\n  <OutboundCallbackUrl>http://example2.com</OutboundCallbackUrl>\n  <RequestedCallbackTypes>\n    <CallbackType>message-delivered</CallbackType>\n    <CallbackType>message-failed</CallbackType>\n    <CallbackType>message-sending</CallbackType>\n  </RequestedCallbackTypes>\n</Application>"
                },
                "voice": {
                  "summary": "Voice application",
                  "value": "<?xml version=\"1.0\" encoding=\"ISO-8859-1\" standalone=\"yes\"?>\n<Application>\n  <ServiceType>Voice</ServiceType>\n  <AppName>v1</AppName>\n  <CallInitiatedCallbackUrl>https://a.com</CallInitiatedCallbackUrl>\n  <CallInitiatedMethod>GET</CallInitiatedMethod>\n  <CallStatusCallbackUrl>https://b.com</CallStatusCallbackUrl>\n  <CallStatusMethod>GET</CallStatusMethod>\n  <CallbackCreds>\n    <UserId>login123</UserId>\n    <Password>password123</Password>\n  </CallbackCreds>\n  <CallInitiatedFallbackUrl>https://fallback.com</CallInitiatedFallbackUrl>\n  <CallInitiatedFallbackMethod>POST</CallInitiatedFallbackMethod>\n  <CallInitiatedFallbackCreds>\n    <UserId>login2</UserId>\n    <Password>password123</Password>\n  </CallInitiatedFallbackCreds>\n  <CallbackTimeout>20</CallbackTimeout>\n </Application>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ApplicationPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "messaging": {
                    "summary": "Messaging application",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationProvisioningResponse>\n  <Application>\n    <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId>\n    <ServiceType>Messaging</ServiceType>\n    <AppName>EBVICs</AppName>\n    <!-- DEPRECATED -->\n    <MsgCallbackUrl>http://example.com</MsgCallbackUrl>\n    <InboundCallbackUrl>http://example.com</InboundCallbackUrl>\n    <OutboundCallbackUrl>http://example2.com</OutboundCallbackUrl>\n    <RequestedCallbackTypes>\n      <CallbackType>message-delivered</CallbackType>\n      <CallbackType>message-failed</CallbackType>\n      <CallbackType>message-sending</CallbackType>\n    </RequestedCallbackTypes>\n  </Application>\n</ApplicationProvisioningResponse>"
                  },
                  "voice": {
                    "summary": "Voice application",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationProvisioningResponse>\n  <Application>\n    <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId>\n    <ServiceType>Voice</ServiceType>\n    <AppName>EBVICs</AppName>\n    <CallInitiatedCallbackUrl>https://example2.com</CallInitiatedCallbackUrl>\n    <CallInitiatedMethod>[GET|POST]</CallInitiatedMethod>\n    <CallStatusCallbackUrl>https://example3.com</CallStatusCallbackUrl>\n    <CallStatusMethod>[GET|POST]</CallStatusMethod>\n  </Application>\n</ApplicationProvisioningResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProvisioningSingleResponseWrapper"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "/accounts"
        ],
        "description": "<p>Delete an Application.</p><p>An Application cannot be removed from an account if that Application is referenced by any Location associated with the account.</p><p>Please visit <a href='/docs/account/applications'>Applications management</a></p>",
        "operationId": "DeleteApplication",
        "summary": "Delete application",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "User's account ID",
            "example": "900000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "description": "Application ID",
            "in": "path",
            "required": true,
            "example": "fcb022e2-ea3a-448d-a6af-31dd13aeaa62",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {}
            }
          }
        }
      },
      "patch": {
        "tags": [
          "/accounts"
        ],
        "description": "<p>Patch update an Application</p><ul><li>CallStatusCallbackUrl can be removed by settings its value to 'remove'</li></ul><p>Please visit <a href='/docs/account/applications'>Applications management</a></p>",
        "operationId": "PatchApplication",
        "summary": "Patch application",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "User's account ID",
            "example": "900000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "description": "Application ID",
            "in": "path",
            "required": true,
            "example": "fcb022e2-ea3a-448d-a6af-31dd13aeaa62",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Application>\n  <AppName>XgRIdP</AppName>\n</Application>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ApplicationPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationProvisioningResponse>\n  <Application>\n    <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId>\n    <ServiceType>Voice</ServiceType>\n    <AppName>EBVICs</AppName>\n    <CallInitiatedCallbackUrl>https://example2.com</CallInitiatedCallbackUrl>\n    <CallInitiatedMethod>[GET|POST]</CallInitiatedMethod>\n    <CallStatusCallbackUrl>https://example3.com</CallStatusCallbackUrl>\n    <CallStatusMethod>[GET|POST]</CallStatusMethod>\n  </Application>\n</ApplicationProvisioningResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProvisioningSingleResponseWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/applications/{applicationId}/associatedsippeers": {
      "get": {
        "tags": [
          "/accounts"
        ],
        "description": "Retrieve a list of sippeers, associated with application",
        "operationId": "ListAssociatedSippeers",
        "summary": "List associated sippeers",
        "parameters": [
          {
            "name": "accountId",
            "description": "User's account ID",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "example": "900000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "description": "Application ID",
            "in": "path",
            "required": true,
            "example": "fcb022e2-ea3a-448d-a6af-31dd13aeaa62",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AssociatedSipPeersResponse>\n  <AssociatedSipPeers>\n    <AssociatedSipPeer>\n      <SiteId>482</SiteId>\n      <SiteName>site_e867f</SiteName>\n      <PeerId>500018</PeerId>\n      <PeerName>sippeer-e867f</PeerName>\n    </AssociatedSipPeer>\n    <AssociatedSipPeer>\n      <SiteId>483</SiteId>\n      <SiteName>site_e867d</SiteName>\n      <PeerId>500019</PeerId>\n      <PeerName>sippeer-e867d</PeerName>\n    </AssociatedSipPeer>\n  </AssociatedSipPeers>\n</AssociatedSipPeersResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AssociatedSipPeersResponseWrapper"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AssociatedSipPeersResponse>\n  <ResponseStatus>\n    <ErrorCode>12103</ErrorCode>\n    <Description>Current 1 Account have no Catapult association</Description>\n  </ResponseStatus>\n</AssociatedSipPeersResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AssociatedSipPeersErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AssociatedSipPeersResponse>\n  <ResponseStatus>\n    <ErrorCode>13629</ErrorCode>\n    <Description>Application with id 'non_existing' not found</Description>\n  </ResponseStatus>\n</AssociatedSipPeersResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AssociatedSipPeersErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  }
}